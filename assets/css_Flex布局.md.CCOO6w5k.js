import{_ as s,c as a,o as n,a3 as i}from"./chunks/framework.BkEKdGEG.js";const t="/note/assets/flex-1.DcuLMsXD.png",e="/note/assets/flex-2.DU5Gl-cG.png",l="/note/assets/flex-3.BHsj_1w0.png",p="/note/assets/flex-4.nWIpjYZJ.png",d="/note/assets/flex-5.D4HG7qus.png",r="/note/assets/flex-6.Z2hyj-t0.png",f=JSON.parse('{"title":"","description":"","frontmatter":{"created":"2023-08-20T00:00:00.000Z","updated":"2023-08-20T00:00:00.000Z"},"headers":[],"relativePath":"css/Flex布局.md","filePath":"css/Flex布局.md","lastUpdated":1716610678000}'),h={name:"css/Flex布局.md"},c=i('<h2 id="flex布局" tabindex="-1"><code>flex</code>布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;`flex`布局&quot;">​</a></h2><h3 id="_01-几个概念" tabindex="-1">01. 几个概念 <a class="header-anchor" href="#_01-几个概念" aria-label="Permalink to &quot;01. 几个概念&quot;">​</a></h3><ul><li><p>flex 布局</p><p>即弹性盒子布局，是给<strong>父元素</strong>添加<code>flex</code>属性，以控制子元素的位置和排列</p></li><li><p>主轴和侧轴</p><p>主轴：即沿着<code>flex</code>元素排列方向所在的轴</p><p>侧轴：垂直于<code>flex</code>元素排列方向的轴</p></li></ul><h3 id="_02-父元素的属性" tabindex="-1">02. 父元素的属性 <a class="header-anchor" href="#_02-父元素的属性" aria-label="Permalink to &quot;02. 父元素的属性&quot;">​</a></h3><blockquote><p>设置再父元素中，控制的是子元素的排列</p></blockquote><ul><li><p><code>flex-direction</code>:设置<strong>主轴方向</strong>，设置了其中一个为主轴，则另一个为侧轴</p><blockquote><p>可以在属性值后面添加 reverse 进行翻转</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>row</code></td><td>水平排列，沿着 X 轴方向从左到右排列，默认值,</td></tr><tr><td><code>column</code></td><td>垂直排列，沿着 Y 轴方向从上到下排列</td></tr><tr><td><code>row-reverse</code></td><td>水平排列，沿着 X 轴方向从右到左排列</td></tr><tr><td><code>column-reverse</code></td><td>垂直排列，沿着 Y 轴方向从下到上排列</td></tr></tbody></table></li><li><p><code>justify-content</code>：设置<strong>在主轴方向上</strong>的子元素的排列方式</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>沿主轴方向从左到右（从上到下）排列，默认值</td></tr><tr><td><code>flex-end</code></td><td>从主轴方向从右到左（从下到上）排列</td></tr><tr><td><code>center</code></td><td>居中对齐</td></tr><tr><td><code>space-around</code></td><td>平均分配剩余空间</td></tr><tr><td><code>space-between</code></td><td>两端贴边，中间仔平均分配剩余空间</td></tr></tbody></table><p>水平方向：<img src="'+t+'" alt="css" loading="lazy"></p><p>垂直方向：<img src="'+e+'" alt="css" loading="lazy"></p></li><li><p><code>flex-wrap</code>：设置子元素是否换行</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>nowrap</code></td><td>不换行，默认值，缩放父元素，同时也会缩放子元素</td></tr><tr><td><code>wrap</code></td><td>设置换行</td></tr></tbody></table></li><li><p><code>align-items</code>：设置<strong>在侧轴方向上</strong>的单行子元素的排列方式————仅适用于单行</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>从头开始</td></tr><tr><td><code>flex-end</code></td><td>从后开始</td></tr><tr><td><code>center</code></td><td>在侧轴上居中对齐</td></tr><tr><td><code>stretch</code></td><td>拉伸（默认值）</td></tr></tbody></table><p>水平方向：<img src="'+l+'" alt="css" loading="lazy"></p><p>垂直方向：<img src="'+p+'" alt="css" loading="lazy"></p></li><li><p><code>align-content</code>：设置在侧轴方向上的多行子元素的排列方式——————适用于多行</p><blockquote><p>这个属性只有在设置了换行的情况下才使用，且在单行情况下是没有效果的</p><p>即需要搭配<code>flex-wrap:wrap;</code></p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td></td></tr><tr><td><code>flex-end</code></td><td></td></tr><tr><td><code>center</code></td><td></td></tr><tr><td><code>space-around</code></td><td></td></tr><tr><td><code>space-between</code></td><td></td></tr><tr><td><code>stretch</code></td><td></td></tr></tbody></table><p>水平方向：<img src="'+d+'" alt="css" loading="lazy"></p><p>垂直方向：<img src="'+r+`" alt="css" loading="lazy"></p></li><li><p><code>flex-flow</code>：复合属性，同时设置主轴方向和是否换行</p></li></ul><hr><ul><li>语法：</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.father</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 首先要给父元素添加flex */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 父元素中常见的六种属性 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 1.设置主轴方向 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 2.设置在主轴方向上的子元素的排列方式 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 3.设置子元素是否换行 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nowrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 4.设置在侧轴方向上的单行子元素的排列方式————仅适用于单行 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 5.设置在侧轴方向上的多行子元素的排列方式——————适用于多行 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    align-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 6.复合属性，同时设置主轴方向和是否换行 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* flex-flow: row nowrap; */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><hr><h3 id="_03-子元素的属性" tabindex="-1">03. 子元素的属性 <a class="header-anchor" href="#_03-子元素的属性" aria-label="Permalink to &quot;03. 子元素的属性&quot;">​</a></h3><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>flex</code></td><td>设置子项元素对剩余空间的分配，每一个子元素项都可单独设置，将所有子元素占的份数加起来，即为占父元素的比例</td></tr><tr><td><code>align-self</code></td><td>单独设置子项自己在侧轴上的排列方式，包括<code>flex-start</code>;<code>flex-end</code>;<code>center</code>;<code>stretch</code>;<code>baseline</code>;</td></tr><tr><td><code>order</code></td><td>order 控制子项的排列顺序，越小越靠前,默认值为 0</td></tr></tbody></table><ul><li>语法：</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.son</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 子元素上的属性 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 1.设置元素对剩余空间的分配份数 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 即，将所有子元素占的分数加起来，然后占父元素宽度的几分之几 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 2.设置子项自己在侧轴上的排列方式 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 3.order控制子项的排列顺序，越小越靠前，默认为0 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,14),k=[c];function o(b,g,E,y,u,m){return n(),a("div",null,k)}const C=s(h,[["render",o]]);export{f as __pageData,C as default};
