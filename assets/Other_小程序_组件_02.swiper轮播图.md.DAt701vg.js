import{_ as e,c as i,o as a,a1 as t}from"./chunks/framework.yskgK-vV.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Other/小程序/组件/02.swiper轮播图.md","filePath":"Other/小程序/组件/02.swiper轮播图.md"}'),l={name:"Other/小程序/组件/02.swiper轮播图.md"},o=t('<h2 id="swiper-轮播图标签" tabindex="-1">Swiper 轮播图标签 <a class="header-anchor" href="#swiper-轮播图标签" aria-label="Permalink to &quot;Swiper 轮播图标签&quot;">​</a></h2><h3 id="_01-关于指示点" tabindex="-1">01. 关于指示点 <a class="header-anchor" href="#_01-关于指示点" aria-label="Permalink to &quot;01. 关于指示点&quot;">​</a></h3><ul><li><p><code>indicator-dots</code>：是否显示面板指示点</p></li><li><p><code>indicator-color </code>：指示点颜色</p></li><li><p><code>indicator-active-color</code>：当前选中的指示点颜色</p></li></ul><h3 id="_02-关于切换" tabindex="-1">02. 关于切换 <a class="header-anchor" href="#_02-关于切换" aria-label="Permalink to &quot;02. 关于切换&quot;">​</a></h3><ul><li><p><code>current</code>：当前所在滑块的 index</p></li><li><p><code>autoplay</code>：是否自动切换</p><blockquote><p>注意，如果要设置<code>true</code>或者<code>false</code></p><p>请务必将其放在<strong>插值表达式</strong>中</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">swiper</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> autoplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{false}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">swiper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>否则，你设置的只是一段字符串，它将永远是<code>true</code>，始终会开启自动滚动</p></blockquote></li><li><p><code>interval</code>：自动切换时间间隔</p></li><li><p><code>duration</code>：滑动动画过渡时长</p></li><li><p><code>circular</code>：是否采用衔接滑动，即循环轮播</p></li><li><p><code>vertical</code>：滑动方向是否为纵向</p><blockquote><p>设置<code>true | false </code>请使用插值表达式</p></blockquote></li><li><p><code>easing-function</code>：指定 swiper 切换缓动<strong>动画类型</strong></p><blockquote><p>可选值：</p><ul><li><code>default</code>：默认缓动动画</li><li><code>linear</code>：线性动画</li><li><code>easeInCubic</code>：缓入动画</li><li><code>easeOutCubic</code>：缓出动画</li><li><code>easeInOUtCubic</code>：缓入缓出动画</li></ul></blockquote></li></ul><h3 id="_03-关于滑块" tabindex="-1">03. 关于滑块 <a class="header-anchor" href="#_03-关于滑块" aria-label="Permalink to &quot;03. 关于滑块&quot;">​</a></h3><ul><li><p><code>previous-margin</code>：滑块的前边距，可用于露出前一项的一小部分，接受 px 和 rpx 值</p></li><li><p><code>next-margin</code>：滑块的后边距，可用于露出后一项的一小部分，接受 px 和 rpx 值</p></li><li><p><code>snap-to-edge</code>：当滑块的个数大于等于 2，关闭 circular 并且开启 previous-margin 或 next-margin 的时候，可以指定这个边距是否应用到第一个、最后一个元素</p></li><li><p><code>display-multiple-items</code>：同时显示的滑块数量</p></li></ul><h3 id="_04-关于事件" tabindex="-1">04. 关于事件 <a class="header-anchor" href="#_04-关于事件" aria-label="Permalink to &quot;04. 关于事件&quot;">​</a></h3><ul><li><p><code>bindchange</code>：current 改变时会触发 change 事件，<code>event.detail = {current, source} </code></p></li><li><p><code>bindtransition</code>：swiper-item 的位置发生改变时会触发 transition 事件，<code>event.detail = {dx: dx, dy: dy} </code></p></li><li><p><code>bindanimationfinish</code>：动画结束时会触发 animationfinish 事件，event.detail 同上</p></li></ul>',9),s=[o];function c(d,r,n,p,h,u){return a(),i("div",null,s)}const b=e(l,[["render",c]]);export{_ as __pageData,b as default};
