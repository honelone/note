import{_ as e,c as a,o as l,a1 as o}from"./chunks/framework.yskgK-vV.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Memo/00.产品知识.md","filePath":"Memo/00.产品知识.md"}'),i={name:"Memo/00.产品知识.md"},c=o('<h2 id="需要了解的知识" tabindex="-1">需要了解的知识 <a class="header-anchor" href="#需要了解的知识" aria-label="Permalink to &quot;需要了解的知识&quot;">​</a></h2><h3 id="_01-通常说的项目或者产品" tabindex="-1">01. 通常说的项目或者产品 <a class="header-anchor" href="#_01-通常说的项目或者产品" aria-label="Permalink to &quot;01. 通常说的项目或者产品&quot;">​</a></h3><h4 id="tob" tabindex="-1"><code>ToB</code> <a class="header-anchor" href="#tob" aria-label="Permalink to &quot;`ToB`&quot;">​</a></h4><ul><li>不是给所有人用的产品，只针对于特定人群 <ul><li>例如：公司员工、合作伙伴等，一般是管理系统类的项目偏多</li></ul></li></ul><h4 id="oa" tabindex="-1"><code>OA</code> <a class="header-anchor" href="#oa" aria-label="Permalink to &quot;`OA`&quot;">​</a></h4><ul><li>企业办公管理系统 <ul><li>例如：钉钉、飞书</li></ul></li></ul><h4 id="erp" tabindex="-1"><code>ERP</code> <a class="header-anchor" href="#erp" aria-label="Permalink to &quot;`ERP`&quot;">​</a></h4><ul><li>企业战略计划管理系统，一般会比 OA 大，集成了很多公司的管理制度和运行流程</li></ul><h4 id="crm" tabindex="-1"><code>CRM</code> <a class="header-anchor" href="#crm" aria-label="Permalink to &quot;`CRM`&quot;">​</a></h4><ul><li>客户管理系统，一般<code>CRM</code>只是<code>OA</code>或者<code>ERP</code>中的某个板块</li></ul><h4 id="cms" tabindex="-1"><code>CMS</code> <a class="header-anchor" href="#cms" aria-label="Permalink to &quot;`CMS`&quot;">​</a></h4><ul><li>内容管理系统，公司内部使用，主要是针对于<code>ToC</code>项目中的内容管理</li></ul><h4 id="tim" tabindex="-1"><code>TIM</code> <a class="header-anchor" href="#tim" aria-label="Permalink to &quot;`TIM`&quot;">​</a></h4><ul><li>即时通讯系统 <ul><li>例如：QQ、微信</li></ul></li></ul><h4 id="toc" tabindex="-1"><code>ToC</code> <a class="header-anchor" href="#toc" aria-label="Permalink to &quot;`ToC`&quot;">​</a></h4><ul><li>针对于所有人的产品 <ul><li>例如：电商网站、门户网站、视频网站等</li></ul></li></ul><hr><h3 id="_02-mpa-和-spa" tabindex="-1">02. MPA 和 SPA <a class="header-anchor" href="#_02-mpa-和-spa" aria-label="Permalink to &quot;02. MPA 和 SPA&quot;">​</a></h3><h4 id="_1-mpa" tabindex="-1">（1）<code>MPA</code> <a class="header-anchor" href="#_1-mpa" aria-label="Permalink to &quot;（1）`MPA`&quot;">​</a></h4><ul><li><code>MPA</code>：<code>multi page web application</code>，多页面应用 <ul><li>由多个页面组成，基于页面跳转，实现项目的访问 <ul><li>多个页面之间公共的部分，每个页面还需要单独写一次</li></ul></li><li>每一次打开新页面，所有资源都需要重新渲染</li></ul></li></ul><h4 id="_2-spa" tabindex="-1">（2）<code>SPA</code> <a class="header-anchor" href="#_2-spa" aria-label="Permalink to &quot;（2）`SPA`&quot;">​</a></h4><ul><li><code>SPA</code>：<code>single page web application</code>，单页面应用 <ul><li>只有一个页面，包含很多模块，我们控制哪些模块显示/隐藏来实现不同信息的展示 <ul><li>可以有效的提取公共部分，提高开发效率</li><li>公共资源无需重复渲染</li><li>更好的实现模块化开发</li><li>方案：<code>vue-router</code>或者<code>react-router-dom</code>前端路由技术管理</li></ul></li></ul></li></ul><hr><h3 id="_04-app-开发" tabindex="-1">04. APP 开发 <a class="header-anchor" href="#_04-app-开发" aria-label="Permalink to &quot;04. APP 开发&quot;">​</a></h3><ul><li><p><code>NativeApp</code>原生 APP 开发</p><ul><li>原生 APP 开发，性能更好，功能更强大（基于操作系统）</li><li>内部集成了一些操作手机软硬件的方法</li><li>不能跨平台开发，需要主动更新</li></ul></li><li><p><code>Hybrid</code>混合 APP，<code>NativeApp + webApp</code></p><ul><li>使用<code>NativeApp</code>开发一个 APP 壳子，然后在<code>webView</code>中嵌入开发的<code>H5</code>页面即可</li></ul></li><li><p><code>WebApp H5</code>页面</p><ul><li>无需安装，直接基于地址访问（需要浏览器渲染）</li><li>性能体验不好</li><li>不能直接操作系统，需要浏览器支持</li><li>可跨平台开发，可即时获取最新内容</li></ul></li></ul>',25),d=[c];function t(r,u,h,n,s,p){return l(),a("div",null,d)}const m=e(i,[["render",t]]);export{P as __pageData,m as default};
