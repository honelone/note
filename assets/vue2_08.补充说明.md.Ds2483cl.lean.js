import{_ as p,D as t,c as h,j as s,a as i,I as l,w as e,a3 as a,o as k}from"./chunks/framework.BkEKdGEG.js";const Z=JSON.parse('{"title":"","description":"","frontmatter":{"created":"2023-08-28T00:00:00.000Z","updated":"2023-08-28T00:00:00.000Z"},"headers":[],"relativePath":"vue2/08.补充说明.md","filePath":"vue2/08.补充说明.md","lastUpdated":1716610678000}'),r={name:"vue2/08.补充说明.md"},E=a("",9),d=s("code",null,".sync",-1),c=a("",2),o=s("h3",{id:"_03-nexttick",tabindex:"-1"},[i("03. "),s("code",null,"$nextTick"),i(),s("a",{class:"header-anchor",href:"#_03-nexttick","aria-label":'Permalink to "03. `$nextTick`"'},"​")],-1),u=s("strong",null,"不能立即获取到更新后的值",-1),g=s("p",null,[i("需要使用"),s("code",null,"$nextTick"),i("这个回调，让修改后的 data 值"),s("strong",null,"渲染更新到 dom 元素"),i("之后再获取，才能成功")],-1),y=s("code",null,"$nextTick",-1),b=s("li",null,[i("在"),s("strong",null,"修改数据之后"),i("使用这个方法，可以"),s("strong",null,"立即获取更新后的 DOM 元素")],-1),m=a("",1),F=s("h3",{id:"_04-set和vue-set",tabindex:"-1"},[i("04. "),s("code",null,"$set"),i("和"),s("code",null,"vue.set()"),i(),s("a",{class:"header-anchor",href:"#_04-set和vue-set","aria-label":'Permalink to "04. `$set`和`vue.set()`"'},"​")],-1),_=s("u",null,"对象属性的添加或删除",-1),v=s("ul",null,[s("li",null,[i("这是因为 Vue.js 在初始化实例时将属性转为 "),s("code",null,"getter/setter"),i("，所以属性必须"),s("strong",null,"在 data 对象上"),i("才能让 Vue.js 转换它，才能让它是响应的")])],-1),C=a("",1),A=s("hr",null,null,-1),D=s("p",null,"响应式更改数组的其他方法：",-1),B=s("strong",null,"可以",-1),f=a("",1),q=a("",1),x=s("h3",{id:"_05-v-show-与-v-if",tabindex:"-1"},[i("05. v-show 与 v-if "),s("a",{class:"header-anchor",href:"#_05-v-show-与-v-if","aria-label":'Permalink to "05. v-show 与 v-if"'},"​")],-1),T=s("h4",{id:"_1-区别",tabindex:"-1"},[i("（1）区别 "),s("a",{class:"header-anchor",href:"#_1-区别","aria-label":'Permalink to "（1）区别"'},"​")],-1),P=s("p",null,[s("code",null,"v-if"),i(" 是真正的条件渲染，直到条件第一次变为真时，才会开始渲染（懒加载）")],-1),V=s("li",null,[s("p",null,[s("code",null,"v-show"),i(" 不管初始条件是什么都会渲染，并且只是简单地基于 CSS 的 "),s("code",null,"display"),i(" 属性进行切换")])],-1),S=s("li",null,[s("p",null,[s("code",null,"v-show"),i(" 只是 CSS 级别的 "),s("code",null,"display: none;"),i(" 和 "),s("code",null,"display: block;"),i(" 之间的切换")])],-1),w=a("",10);function I($,j,N,O,R,M){const n=t("font");return k(),h("div",null,[E,s("ul",null,[s("li",null,[s("p",null,[d,i(" 不是真正的双向绑定，而是一个语法糖，"),l(n,{color:"blue"},{default:e(()=>[i("修改数据还是在父组件完成的，并非在子组件")]),_:1})]),c])]),o,s("ul",null,[s("li",null,[s("p",null,[i("在 Vue 中，并不是数据发生变化之后，DOM 立即发生变化，当修改了 data 的值，然后马上获取这个 dom 元素的值，是"),l(n,{color:"red"},{default:e(()=>[u]),_:1})])]),s("li",null,[g,s("ul",null,[s("li",null,[y,i("表示："),l(n,{style:{color:"blue"}},{default:e(()=>[i("在下次 DOM 更新循环结束之后执行")]),_:1})]),b]),m])]),F,s("ul",null,[s("li",null,[s("p",null,[i("由于 JavaScript 的限制，vue 无法检测"),_,i("、不能检测"),s("u",null,[l(n,{color:"red"},{default:e(()=>[i("非数组方法")]),_:1}),i("变化的数组")])]),v]),C]),A,s("ul",null,[s("li",null,[D,s("ul",null,[s("li",null,[s("p",null,[i("数组的以下方法，"),l(n,{color:"red"},{default:e(()=>[i("都是"),B,i("触发视图更新的")]),_:1}),i("，也就是响应式的：")]),f]),q])])]),x,T,s("ul",null,[s("li",null,[P,s("ul",null,[s("li",null,[i("v-if 指令是"),l(n,{color:"red"},{default:e(()=>[i("直接销毁和重建")]),_:1}),i("DOM 节点，达到让元素显示和隐藏的效果")])])]),V,S]),w])}const z=p(r,[["render",I]]);export{Z as __pageData,z as default};
