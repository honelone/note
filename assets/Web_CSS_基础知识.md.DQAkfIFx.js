import{_ as s,c as i,o as a,a1 as l}from"./chunks/framework.yskgK-vV.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Web/CSS/基础知识.md","filePath":"Web/CSS/基础知识.md"}'),e={name:"Web/CSS/基础知识.md"},n=l(`<h2 id="一、基础知识" tabindex="-1">一、基础知识 <a class="header-anchor" href="#一、基础知识" aria-label="Permalink to &quot;一、基础知识&quot;">​</a></h2><h3 id="_01-选择器" tabindex="-1">01. 选择器 <a class="header-anchor" href="#_01-选择器" aria-label="Permalink to &quot;01. 选择器&quot;">​</a></h3><h4 id="_1-权重" tabindex="-1">（1）权重 <a class="header-anchor" href="#_1-权重" aria-label="Permalink to &quot;（1）权重&quot;">​</a></h4><ul><li><p>非特殊情况下，按照以下权重进行优先级的比较</p><ul><li><code>style</code>行内样式：<strong>1000</strong></li><li><code>ID</code>选择器：<strong>100</strong></li><li><code>Class</code>选择器，<code>Attr</code>选择器，伪类选择器：<strong>10</strong></li><li><code>Tag</code>选择器，伪元素选择器：<strong>1</strong></li></ul></li><li><p>选择器的总权值越高，样式就越优先显示</p><ul><li><code>!important</code> &gt; <code>style</code>&gt; <code>#id</code> &gt; <code>.class</code> &gt; <code>tag</code> &gt; <code>*</code> &gt; <code>inherit</code> &gt; <code>default</code></li></ul></li></ul><h4 id="_2-基本选择器" tabindex="-1">（2）基本选择器 <a class="header-anchor" href="#_2-基本选择器" aria-label="Permalink to &quot;（2）基本选择器&quot;">​</a></h4><ul><li><p>通用选择器<code>*</code>：匹配所有元素</p></li><li><p>标签选择器<code>tagName</code>：匹配所有<code>tagName</code>对应的标签</p></li><li><p>类选择器<code>className</code>：匹配所有<code>className</code>对应的元素</p></li><li><p>ID 选择器<code>idName</code>：匹配<code>idName</code>对应的元素，<code>id</code>是唯一的</p></li></ul><h4 id="_3-层次选择器" tabindex="-1">（3）层次选择器 <a class="header-anchor" href="#_3-层次选择器" aria-label="Permalink to &quot;（3）层次选择器&quot;">​</a></h4><table><thead><tr><th>选择器</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>E F</code></td><td>后代选择器</td><td>以【<strong>空格</strong>】隔开，匹配<code>E</code>元素对应标签内的<strong>所有后代标签</strong><code>F</code>（不论嵌套层数）</td></tr><tr><td><code>E &gt; F</code></td><td>父子选择器</td><td>以【 <strong>&gt;</strong> 】分隔，匹配<code>E</code>元素对应标签嵌套的<strong>第一层子标签</strong><code>F</code></td></tr><tr><td><code>E + F</code></td><td>相邻兄弟选择器</td><td>以【 <strong>+</strong> 】分隔，匹配与<code>E</code>元素<strong>同级的、紧跟的后一个标签</strong><code>F</code></td></tr><tr><td><code>E ~ F</code></td><td>后续兄弟选择器</td><td>以【<strong>~</strong>】分隔，<strong>同一父级下</strong>，匹配与<code>E</code>元素<strong>同级</strong>的在<code>E</code>元素<strong>后面的</strong>所有<code>F</code>元素</td></tr></tbody></table><h4 id="_4-属性选择器" tabindex="-1">（4）属性选择器 <a class="header-anchor" href="#_4-属性选择器" aria-label="Permalink to &quot;（4）属性选择器&quot;">​</a></h4><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E[attr]</code></td><td>选择有【<code>attr</code>】属性的 <code>E</code> 元素</td></tr><tr><td><code>E[attr=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性且<strong>属性值</strong>为【<code>val</code>】的 <code>E</code> 元素</td></tr><tr><td><code>E[attr^=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性，且以【<code>val</code>】<strong>开头</strong>的 <code>E</code> 元素</td></tr><tr><td><code>E[attr$=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性，且以【<code>val</code>】<strong>结尾</strong>的 <code>E</code> 元素</td></tr><tr><td><code>E[attr*=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性，且属性值<strong>包含</strong>【<code>val</code>】的 <code>E</code> 元素</td></tr><tr><td><code>E[attr~=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性，且属性值为用【<strong>空格</strong>】分开的<strong>字词列表</strong>，<br>列表中含有【<code>val</code>】（如：list val）的 <code>E</code> 元素</td></tr><tr><td><code>E[attr|=&quot;val&quot;]</code></td><td>选择有【<code>attr</code>】属性，且属性值为以【<code>val</code>】<strong>开头</strong>，并用连接符【<code>-</code>】<strong>分开的字符串</strong>（如：val-list）的 <code>E</code> 元素</td></tr></tbody></table><h4 id="_5-伪类选择器" tabindex="-1">（5）伪类选择器 <a class="header-anchor" href="#_5-伪类选择器" aria-label="Permalink to &quot;（5）伪类选择器&quot;">​</a></h4><ul><li>伪类选择器：即根据元素的<strong>不同状态</strong>，展示不同的样式，叫做伪类。</li></ul><h5 id="i-动态伪类选择器" tabindex="-1">（i）动态伪类选择器 <a class="header-anchor" href="#i-动态伪类选择器" aria-label="Permalink to &quot;（i）动态伪类选择器&quot;">​</a></h5><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:link</code></td><td>设置<strong>超链接 a</strong>在<strong>未被访问前</strong>的样式</td></tr><tr><td><code>E:visited</code></td><td>设置<strong>超链接 a</strong>在其链接地址<strong>已被访问过</strong>时的样式</td></tr><tr><td><code>E:hover</code></td><td>设置元素在其鼠标<strong>悬停时</strong>的样式</td></tr><tr><td><code>E:active</code></td><td>设置元素在被用户<strong>激活</strong>（在鼠标点击与释放之间发生的事件）时的样式</td></tr><tr><td><code>E:focus</code></td><td>设置元素在成为输入<strong>焦点</strong>（该元素的 onfocus 事件发生）时的样式</td></tr></tbody></table><h5 id="ii-结构伪类选择器" tabindex="-1">（ii）结构伪类选择器 <a class="header-anchor" href="#ii-结构伪类选择器" aria-label="Permalink to &quot;（ii）结构伪类选择器&quot;">​</a></h5><ul><li><p><code>nth-child</code>选择</p><ul><li><p>会先把所有子元素都排序，选择第<code>n</code>个孩子，然后再去匹配要选择的标签，如果第<code>n</code>个元素不匹配选择的标签，则无效</p></li><li><p><code>n</code>的用法：<code>n</code>从 0 开始，可以使用基本的算数运算</p></li><li><p><code>n</code>的关键字：<code>even</code>表示偶数位，也即<code>2n</code>；<code>odd</code>表示奇数位，也即<code>2n+1</code></p><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:first-child</code></td><td>选择父元素里的，<strong>第一个子元素</strong><code>E</code></td></tr><tr><td><code>E:last-child</code></td><td>选择父元素里的，<strong>最后一个子元素</strong><code>E</code></td></tr><tr><td><code>E:nth-child(n)</code></td><td>选择父元素里的，第【<code>n</code>】个子元素<code>E</code></td></tr></tbody></table></li></ul></li><li><p><code>nth-of-type</code>选择</p><ul><li><p>会先找出指定的元素，然后再对找出的元素进行排列，从而去选出第<code>n</code>个孩子</p><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:first-of-type</code></td><td>选择父元素里的，<strong>第一个类型</strong>为<code>E</code>的子元素</td></tr><tr><td><code>E:last-of-type</code></td><td>选择父元素里的，<strong>最后一个类型</strong>为<code>E</code>的子元素</td></tr><tr><td><code>E:nth-of-type(n)</code></td><td>选择父元素里的，第【<strong>n</strong>】个类型为<code>E</code>的子元素</td></tr></tbody></table></li></ul></li><li><p>其它状态</p><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:empty</code></td><td>选择<strong>没有子元素</strong>的元素<code>E</code>，而且该元素也不包含任何文本节点</td></tr><tr><td><code>E:only-of-type</code></td><td>选择父元素中<strong>所有子元素中唯一的子元素</strong><code>E</code></td></tr><tr><td><code>E:only-child</code></td><td>选择父元素<strong>仅有的一个子元素</strong><code>E</code></td></tr><tr><td><code>E:root</code></td><td>选择匹配元素<code>E</code>所在文档的<strong>根元素</strong>。<br>在 HTML 文档中，根元素始终是<code>html</code>，此时该选择器与<code>html</code>类型选择器匹配的内容相同</td></tr></tbody></table></li></ul><h5 id="iii-否定伪类选择器" tabindex="-1">（iii）否定伪类选择器 <a class="header-anchor" href="#iii-否定伪类选择器" aria-label="Permalink to &quot;（iii）否定伪类选择器&quot;">​</a></h5><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:not(F)</code></td><td>匹配所有<strong>除元素<code>F</code>外的<code>E</code>元素</strong></td></tr></tbody></table><h5 id="iv-目标伪类选择器" tabindex="-1">（iv）目标伪类选择器 <a class="header-anchor" href="#iv-目标伪类选择器" aria-label="Permalink to &quot;（iv）目标伪类选择器&quot;">​</a></h5><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:target</code></td><td>匹配相关<code>url</code>指向的<code>E</code>元素</td></tr></tbody></table><h5 id="v-语言伪类选择器" tabindex="-1">（v）语言伪类选择器 <a class="header-anchor" href="#v-语言伪类选择器" aria-label="Permalink to &quot;（v）语言伪类选择器&quot;">​</a></h5><h5 id="vi-状态伪类选择器" tabindex="-1">（vi）状态伪类选择器 <a class="header-anchor" href="#vi-状态伪类选择器" aria-label="Permalink to &quot;（vi）状态伪类选择器&quot;">​</a></h5><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>E:checked</code></td><td>匹配选中的<strong>复选框或者单选按钮</strong>表单元素</td></tr><tr><td><code>E:enabled</code></td><td>匹配所有<strong>启用的</strong>表单元素</td></tr><tr><td><code>E:disabled</code></td><td>匹配所有<strong>禁用的</strong>表单元素</td></tr></tbody></table><h4 id="_6-伪元素选择器" tabindex="-1">（6）伪元素选择器 <a class="header-anchor" href="#_6-伪元素选择器" aria-label="Permalink to &quot;（6）伪元素选择器&quot;">​</a></h4><ul><li><p>伪元素选择器：利用<code>CSS</code>创建新标签元素，而不需要 HTML 标签，从而简化了 HTML 结构</p></li><li><p>属性</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td><code>E::before</code></td><td>在元素<strong>内部的前面</strong>插入内容</td></tr><tr><td><code>E::after</code></td><td>在元素<strong>内部的后面</strong>插入内容</td></tr><tr><td><code>E::first-letter</code></td><td>设置元素内的<strong>第一个字符</strong>的样式</td></tr><tr><td><code>E::first-line</code></td><td>设置元素内的<strong>第一行</strong>的样式</td></tr><tr><td><code>E::placeholder</code></td><td>设置元素的文字<strong>占位符</strong>的样式</td></tr><tr><td><code>E::selection</code></td><td>设置元素<strong>被选择时</strong>的样式</td></tr></tbody></table></li><li><p>注意：</p><ul><li><p>伪元素选择器创建的元素属于<strong>行内元素</strong></p></li><li><p>且在文档树中是找不到的，所以称为伪元素</p></li></ul></li><li><p>语法：<code>element::before{}</code></p><ul><li><code>before</code>和<code>after</code>必须有<strong>content</strong>属性</li></ul></li><li><p>伪元素选择器和标签选择器的权重一样，<strong>权重=1</strong></p></li><li><p>伪元素选择器可用于清除浮动</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.clearfix::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.clearfix::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*显示为块级元素*/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*display: block;*/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*显示为表格，在一行上*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">both</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.clearfix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><h3 id="_02-基本样式" tabindex="-1">02. 基本样式 <a class="header-anchor" href="#_02-基本样式" aria-label="Permalink to &quot;02. 基本样式&quot;">​</a></h3><h4 id="_1-字体文本属性" tabindex="-1">（1）字体文本属性 <a class="header-anchor" href="#_1-字体文本属性" aria-label="Permalink to &quot;（1）字体文本属性&quot;">​</a></h4><ul><li><p><code>font-family</code>：字体名称</p><ul><li>可通过<code>,</code>分隔设置多个字体， 浏览器会从前往后依次进行字体选择</li><li>若有该字体则选中，若没有该字体，则向后选择，若全部没有，则设置为浏览器默认字体</li></ul></li><li><p><code>font-size</code>：字体大小</p><ul><li>关键字：<code>small</code>、<code>smaller</code>、<code>large</code>、<code>larger</code></li><li>也可使用单位设置（见下文）</li></ul></li><li><p><code>font-weight</code>：字体粗细</p><ul><li>关键字：<code>normal</code>、<code>bold</code>、<code>bolder</code></li><li>也可直接使用数字：400，600，800</li></ul></li><li><p><code>font-style</code>：字体样式</p><ul><li>关键字：<code>normal</code>、<code>italic</code></li></ul></li><li><p><code>font</code>：复合属性</p><ul><li>可将上述所有属性使用一行表示</li><li><code>font: font-weight font-size/line-height font-family;</code></li></ul></li></ul><h4 id="_2-文本属性" tabindex="-1">（2）文本属性 <a class="header-anchor" href="#_2-文本属性" aria-label="Permalink to &quot;（2）文本属性&quot;">​</a></h4><ul><li><p><code>color</code>：字体颜色</p><ul><li>可使用颜色单词、十六进制、<code>rgb</code>等颜色表示、</li></ul></li><li><p><code>text-align</code>：文本水平对齐方式</p><ul><li>关键字：<code>left</code>、<code>center</code>、<code>right</code></li></ul></li><li><p><code>vertical-align</code>：垂直对齐方式</p><ul><li>使行内元素盒模型与其行内元素容器垂直对齐，或者垂直对齐表格单元内容</li></ul></li><li><p><code>text-decoration</code>：文本修饰线</p><ul><li>关键字：<code>overline</code>、<code>line-through</code>、<code>underline</code>、<code>none</code></li></ul></li><li><p><code>text-indent</code>：文本缩进</p></li><li><p><code>line-height</code>：文本行高</p></li><li><p><code>text-overflow</code>：文本溢出标识</p><ul><li>关键字：<code>ellipsis</code>、<code>clip</code></li></ul></li></ul><h4 id="_3-背景" tabindex="-1">（3）背景 <a class="header-anchor" href="#_3-背景" aria-label="Permalink to &quot;（3）背景&quot;">​</a></h4><ul><li><p>使用<code>background</code>设置背景属性</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>background-color</code></td><td>背景颜色</td></tr><tr><td><code>background-image</code></td><td>背景图像</td></tr><tr><td><code>background-repeat</code></td><td>背景图像重复规则</td></tr><tr><td><code>background-position</code></td><td>背景图像的位置</td></tr><tr><td><code>background-attachment</code></td><td>背景图像是否固定</td></tr><tr><td><code>background-origin</code></td><td>背景图像的定位中心</td></tr><tr><td><code>background-size</code></td><td>背景图像的大小</td></tr><tr><td><code>background-clip</code></td><td>背景图像的绘制处理</td></tr></tbody></table></li><li><p>示例代码</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.test1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">darkcyan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 背景图片地址 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">./logo.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 背景平铺,repeat,no-repeat,repeat-x,repeat-y */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no-repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 背景图片位置 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 第一个是X坐标，第二个是Y坐标 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 1.方位名词 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* background-position: left center; */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 2.具体数值 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* background-position: 50px 100px; */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 3.混合数值 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 背景图像固定,可用于视差效果 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* background-attachment有两个值，默认scroll,随对象内容滚动  */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* background-attachment: fixed; */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.test2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 背景复合写法 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* background: 颜色 图片 平铺 滚动 位置; */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aquamarine</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">./logo.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no-repeat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fixed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></li><li><p>关于精灵图</p><ul><li><p>精灵图</p><ul><li><p>减少服务器接收和发送请求的次数，提高页面的加载速度</p></li><li><p>将所有小图片放在一张大图片上</p></li><li><p>主要针对小背景图片</p></li></ul></li><li><p>使用方法</p><ul><li>主要使用<code>background-position：X Y;</code></li><li>移动背景图片的位置即可在相应的盒子中，显示精灵图中的对应图片</li><li>一般情况下是往左、上移动精灵图，为负值</li><li>添加精灵图，默认在每个盒子的左上角对齐</li></ul></li></ul></li></ul><h3 id="_03-布局" tabindex="-1">03. 布局 <a class="header-anchor" href="#_03-布局" aria-label="Permalink to &quot;03. 布局&quot;">​</a></h3><h4 id="_1-浮动" tabindex="-1">（1）浮动 <a class="header-anchor" href="#_1-浮动" aria-label="Permalink to &quot;（1）浮动&quot;">​</a></h4><ul><li><p>特性</p><ul><li>浮动元素会脱离文档流（标准流）</li><li>浮动元素会显示在一行，除非父元素装不下</li><li>浮动元素具有行内块元素的特性（可设置宽、高等样式）、</li></ul></li><li><p>问题</p><ul><li>浮动元素脱离了文档流，所以会造成父元素的高度塌陷</li><li>浮动的盒子没有外边距塌陷的问题</li><li>浮动的元素会压住下面文档流内的盒子，但不会压住文档流内的文字 这是因为浮动原来就是为了做文字环绕效果的</li></ul></li><li><p>解决</p><ul><li><p>父元素</p><ul><li><p>设置固定高度</p></li><li><p>设置<code>overflow</code></p></li></ul></li><li><p>子元素（额外标签法——隔墙法）</p><ul><li>在最后一个浮动子元素之后添加一个空的<code>div</code>标签或者其它块级元素，且必须是块级元素，设置样式<code>clear: both</code></li></ul></li><li><p><code>:after</code>伪元素</p><ul><li>其原理同上，只是新增的标签由 CSS 伪类生成</li><li>使用<code>clearfix</code>清除浮动，父元素内部的所有元素都要浮动，一浮全浮</li></ul></li></ul></li></ul><h4 id="_2-display" tabindex="-1">（2）display <a class="header-anchor" href="#_2-display" aria-label="Permalink to &quot;（2）display&quot;">​</a></h4><ul><li><p>基本属性</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>inline</code></td><td>设置为行内元素显示，行内元素不能设置高度、宽度，在一行内依次排列，超出换行排列</td></tr><tr><td><code>block</code></td><td>设置为块元素显示，块元素可设置高度、宽度，独占一行</td></tr><tr><td><code>inline-block</code></td><td>设置为行内块元素显示，行内块元素可以设置高度、宽度，且依次排列</td></tr><tr><td><code>none</code></td><td>隐藏元素，元素隐藏后，【不再占有原有位置】，即脱离了文档流</td></tr><tr><td><code>flow-root</code></td><td>让元素块状化</td></tr><tr><td><code>flex</code></td><td>弹性布局（后续有具体介绍）</td></tr><tr><td><code>grid</code></td><td>网格布局（后续有具体介绍）</td></tr><tr><td><code>table</code></td><td>表格布局（基本不用）</td></tr></tbody></table></li><li><p>元素隐藏的另一种方式</p></li><li><p>使用<code>visiblity</code>属性，可选值：<code>Visible</code>标识可见，<code>hidden</code>表示隐藏</p></li><li><p>元素隐藏后，仍然占有原有位置，不脱离文档流</p></li></ul><h4 id="_3-overflow" tabindex="-1">（3）overflow <a class="header-anchor" href="#_3-overflow" aria-label="Permalink to &quot;（3）overflow&quot;">​</a></h4><ul><li><p>基本属性</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>visible</code></td><td>默认值</td></tr><tr><td><code>hidden</code></td><td>隐藏溢出部分内容</td></tr><tr><td><code>auto</code></td><td>在需要的时候添加滚动条，即内容溢出显示滚动条，内容不溢出不显示滚</td></tr><tr><td><code>scroll</code></td><td>滚动条，显示滚动条，不管内容是否溢出（后续会有详细介绍）</td></tr></tbody></table></li><li><p><strong>注意</strong>：在有<strong>定位</strong>的盒子中，谨慎使用 <code>overflow：hidden</code></p></li></ul><h4 id="_4-position" tabindex="-1">（4）position <a class="header-anchor" href="#_4-position" aria-label="Permalink to &quot;（4）position&quot;">​</a></h4><ul><li><p>两个基本概念</p><ul><li>定位模式：<code>static、absolute、relative、fixed</code></li><li>定位偏移：<code>top、bottom、left、right</code></li></ul></li><li><p>具体分类</p><ul><li><p><code>static</code>：静态定位，默认值</p></li><li><p><code>relative</code>：相对定位</p><ul><li><p>相对原来位置定位</p><ul><li>以元素自身在文档流中的原来位置进行偏移</li></ul></li><li><p>保留原来位置</p><ul><li>元素相对定位后，元素原来的位置仍然存在于文档流中</li></ul></li></ul></li><li><p><code>absolute</code>：绝对定位</p><ul><li><p>相对祖先元素定位</p><ul><li>从父元素开始，<strong>向上级</strong>找到最近的一个**已经定位的（<em>不是 static 定位</em>）**祖先元素，进行偏移</li><li>如果没有，则一直找到浏览器</li></ul></li><li><p>脱离文档流</p></li><li><p>不占有原来位置</p></li></ul></li><li><p><code>fixed</code>：固定定位</p><ul><li><p>是<strong>以浏览器的可视窗口为基准</strong>进行定位偏移</p></li><li><p>跟父元素没有任何关系</p></li><li><p>不随滚动条滚动</p></li><li><p>脱离文档流，不占有原来位置</p></li><li><p>一种特殊的绝对定位</p></li></ul></li><li><p><code>sticky</code>：粘性定位</p><ul><li>具有<strong>相对定位和绝对定位的混合特性</strong></li><li><strong>以浏览器的可视窗口为基准</strong>进行定位偏移</li><li>占有原先的位置，不脱离文档流</li><li>必须添加定位偏移：<code>top、bottom、left、right</code></li><li>兼容性差</li></ul></li></ul></li><li><p><strong>子绝父相</strong></p><ul><li><p>用相对定位来作为绝对定位的父元素</p><ul><li>父元素相对定位，子元素绝对定位</li><li>相对定位是为了<strong>限制绝对定位</strong></li></ul></li><li><p>如何固定在版心（主体内容区域）右侧位置</p><ul><li><p>先设置偏移浏览器宽度的一半：<code>left:50%</code></p></li><li><p>再利用<code>margin</code>偏移版心宽度的一半：<code>margin-left:100px</code></p></li></ul></li></ul></li><li><p>定位叠放顺序</p><ul><li><code>z-index : 999</code></li></ul></li><li><p>特殊情况</p><ul><li>行内元素设置**【绝对|固定】**定位，可以直接设置高度、宽度</li><li>块级元素设置**【绝对|固定】**定位，如果不给宽度和高度，默认为内容大小</li><li>脱离文档流的元素都不会触发外边距塌陷的问题</li></ul></li></ul><h3 id="_04-盒模型" tabindex="-1">04. 盒模型 <a class="header-anchor" href="#_04-盒模型" aria-label="Permalink to &quot;04. 盒模型&quot;">​</a></h3><h4 id="_1-基本概念" tabindex="-1">（1）基本概念 <a class="header-anchor" href="#_1-基本概念" aria-label="Permalink to &quot;（1）基本概念&quot;">​</a></h4><ul><li><p>在页面上的每个元素都有两个盒子</p><ul><li>外在盒子：负责元素的排列，行内元素、块级元素</li><li>内在盒子：负责元素的宽高，也就是下面的盒模型</li><li>例：<code>display: inline-block</code><ul><li>外在盒子：<code>inline</code></li><li>内在盒子：<code>block</code></li></ul></li></ul></li><li><p>盒模型：就是一个用来盛放 HTML 元素的容器，包括</p><ul><li><code>content</code>：内容本身</li><li><code>padding</code>：内边距</li><li><code>border</code>：边框</li><li><code>margin</code>：外边距</li></ul></li><li><p>盒模型又分为<strong>标准盒模型</strong>和<strong>怪异盒模型</strong></p></li><li><p><strong>标准盒模型</strong></p><ul><li>设置方式：<code>box-sizing: content-box;</code></li><li>解释： <ul><li>当设置<code>width: 100px;</code>时，实际上设置的是<code>content</code>的宽度</li><li>而盒子的实际宽度是：<code>width + padding + border + margin</code>的宽度</li></ul></li></ul></li><li><p><strong>怪异盒模型</strong></p><ul><li><p>设置方式：<code>box-sizing: border-box;</code></p></li><li><p>解释：</p><ul><li>当设置<code>width: 100px;</code>时，实际上设置的是<code>content + padding + border</code>的宽度</li><li>那么，盒子实际宽度是：<code>width + margin</code>的宽度</li></ul><blockquote><p>设置<code>width: 100px;</code>时：</p><ul><li>如果没有设置<code>padding</code>和<code>border</code>，那么<code>width</code>就是<code>content</code>的宽度</li><li>如果设置了<code>padding</code>和<code>border</code>，那么<code>content = width - padding - border</code><ul><li>如果这时<code>content</code>为负数了，即<code>width &lt; padding + border</code></li><li>那么此时：<code>content == 0</code>，<code>width == padding + border</code></li><li>即，<code>width</code>是不起作用的</li></ul></li></ul></blockquote></li></ul></li></ul><h4 id="_2-盒子阴影" tabindex="-1">（2）盒子阴影 <a class="header-anchor" href="#_2-盒子阴影" aria-label="Permalink to &quot;（2）盒子阴影&quot;">​</a></h4><ul><li><p>语法：<code>box-shadow: outset 1px 2px 3px 4px #666;</code></p><ul><li>参数 1：标识为内阴影还是外阴影，默认<code>outset</code>可省略，设置为<code>inset</code>为内阴影</li><li>参数 1：水平偏移值</li><li>参数 2：垂直偏移值</li><li>参数 3：模糊值，可省略</li><li>参数 4：扩大面积值，可省略</li><li>参数 5：颜色</li></ul></li><li><p>可以通过<code>,</code>分隔从而设置多个阴影，可叠加</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #ccc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #eee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h4 id="_3-bfc-简单介绍" tabindex="-1">（3）<code>BFC</code> 简单介绍 <a class="header-anchor" href="#_3-bfc-简单介绍" aria-label="Permalink to &quot;（3）\`BFC\` 简单介绍&quot;">​</a></h4><ul><li><p>BFC：<code>Block Formatting Context</code>，块级格式化上下文</p><ul><li>即形成了 <code>BFC</code> 的元素，将会拥有一个独立的渲染区域</li><li>它内部的布局不会影响到外部的元素</li></ul></li><li><p>特性：</p><ul><li><code>BFC</code> 元素的边距会重叠</li><li><code>BFC</code> 元素内外布局互不相干</li><li><code>BFC</code> 元素不会与浮动元素发生重叠</li><li><code>BFC</code> 元素的高度计算会包括内部所有元素在内（包括浮动元素）</li></ul></li><li><p>形成条件</p><ul><li><code>body</code>根元素自成 <code>BFC</code></li><li>浮动元素：<code>float != none</code></li><li>定位元素：<code>position == absolute || fixed</code></li><li><code>display == inline-block || table-cells || flex || table-caption</code>的元素</li><li><code>overflow != visible</code>的元素</li></ul></li><li><p>可用于解决垂直外边距重叠问题</p><ul><li><p>父子元素：父子元素在都设置了同一个方向的外边距时，外边距会重叠，值为较大的那个值，并作用在父元素上</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 1. 设置 display -- 建议 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.father</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flow-root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 让元素块状化 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 2. 设置 overflow */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.father</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* overflow: auto */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 3. 设置 padding */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.father</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 4. 设置 border */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.father</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li><li><p>兄弟元素：当两者的外边距设置在同一个地方时，即上面的元素设置<code>margin-bottom</code>，下面的元素设置<code>margin-top</code>，外边距会重叠，值为较大的值</p><ul><li>给其中一个加一个父元素，给父元素触发<code>BFC</code></li></ul></li></ul></li><li><p>可用于解决浮动元素问题</p><ul><li>父子元素：子元素浮动，父元素如果没有设置高度（父元素高度由子元素撑开），会发生高度塌陷，没有高度</li><li>这样，在触发了<code>BFC</code>后，计算高度时，会把浮动元素的值一起计算</li></ul></li></ul><h3 id="_05-单位" tabindex="-1">05. 单位 <a class="header-anchor" href="#_05-单位" aria-label="Permalink to &quot;05. 单位&quot;">​</a></h3><h4 id="_1-基础单位" tabindex="-1">（1）基础单位 <a class="header-anchor" href="#_1-基础单位" aria-label="Permalink to &quot;（1）基础单位&quot;">​</a></h4><ul><li><code>px</code>：相对于显示器屏幕分辨率而言</li><li><code>em</code>：相对于父元素中的文本的字体大小进行单位设置</li><li><code>%</code>： 相对于父元素中字体的百分比</li></ul><h4 id="_2-rem单位" tabindex="-1">（2）<code>rem</code>单位 <a class="header-anchor" href="#_2-rem单位" aria-label="Permalink to &quot;（2）\`rem\`单位&quot;">​</a></h4><ul><li><p><code>rem</code>：是相对于 HTML 元素（根）的字体大小进行的单位设置</p><ul><li><p>每个页面只有 1 个<code>html</code>标签，可以通过修改 HTML 中文字大小<code>font-size</code>来改变页面中元素的大小，进行整体控制</p></li><li><p>文字大小随屏幕大小变化</p></li><li><p>高度自适应</p></li><li><p>高度、宽度等比例缩放</p></li></ul></li><li><p>rem 适配</p><ul><li>是为了让一些不能等比自适应的元素，在设备尺寸改变时，等比例适配当前设备</li><li>主要使用<strong>媒体查询</strong>，根据不同设备按比例设置<code>html</code>的字体大小</li><li>然后页面元素使用 rem 做尺寸单位，当<code>html</code>字体大小变化时，元素尺寸也会发生变化，从而达到等比例缩放的适配</li><li>用<strong>less</strong>动态计算并设置<code>html</code>根标签的字体大小</li><li>将设计稿中的元素宽、高、位置，按照同等比例换算为 rem 为单位的值</li></ul></li><li><p><strong>方法：</strong></p><ul><li><p>首先要有一套标准的屏幕尺寸，比如<code>width:750px</code></p></li><li><p>然后要设置<code>html</code>标签里的文字大小：<code>font-size</code></p><ul><li><p>在这里要先划分屏幕的份数，比如划分为 15 份（其它值也可以），再用屏幕尺寸除以份数，这里是 <code>750/15=50px;</code></p></li><li><p>那么这里<code>html</code>标签里的文字大小为：<code>font-size:50px;</code></p></li><li><p>那么整个页面中的元素尺寸有这样一个换算关系：<code>1rem = 50px</code></p></li></ul></li><li><p>最后，在页面中的元素的单位都需要换算成<code>rem</code>单位的，其<code>rem值 = 元素本身尺寸(px)/根标签字体大小</code>，如：<code>100x100px</code>的图片尺寸就设置为：<code>2 * 2rem</code>；</p></li></ul></li></ul><h3 id="_06-媒体查询" tabindex="-1">06. 媒体查询 <a class="header-anchor" href="#_06-媒体查询" aria-label="Permalink to &quot;06. 媒体查询&quot;">​</a></h3><ul><li><p>媒体查询可以针对不同的屏幕尺寸设置不同的样式</p></li><li><p>定义：<code>@media 媒体类型 关键字 媒体特性 </code></p><ul><li><p>媒体类型：<code>al</code>l | <code>print</code> | <code>screen</code></p></li><li><p>关键字：<code>and</code> | <code>not</code> | <code>only</code></p></li><li><p>媒体特性：<code>width</code> | <code>max-width</code> | <code>min-width</code></p><blockquote><p>【注意】CSS 中的 <code>max-width</code> 和 <code>min-width</code> 都包含 <strong>等于</strong></p></blockquote></li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">801</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f0f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">以上样式：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">在屏幕上 并且 最大宽度是800px 时，设置一种样式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">最小宽度是801px时，改变为另一种样式 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 即，根据不同的屏幕尺寸，改变为不同的样式 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></li></ul>`,55),t=[n];function d(p,o,r,h,c,k){return a(),i("div",null,t)}const u=s(e,[["render",d]]);export{b as __pageData,u as default};
