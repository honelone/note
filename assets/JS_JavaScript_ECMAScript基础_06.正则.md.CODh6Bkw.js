import{_ as i,c as s,o as a,a1 as e}from"./chunks/framework.yskgK-vV.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"JS/JavaScript/ECMAScript基础/06.正则.md","filePath":"JS/JavaScript/ECMAScript基础/06.正则.md"}'),l={name:"JS/JavaScript/ECMAScript基础/06.正则.md"},n=e('<h2 id="正则" tabindex="-1">正则 <a class="header-anchor" href="#正则" aria-label="Permalink to &quot;正则&quot;">​</a></h2><h3 id="_01-基本概念" tabindex="-1">01. 基本概念 <a class="header-anchor" href="#_01-基本概念" aria-label="Permalink to &quot;01. 基本概念&quot;">​</a></h3><ul><li><strong>正则表达式</strong>（Regular Expression）：是用于匹配字符串中字符组合的模式。在<code>Javascript</code>中，正则表达式也是对象</li><li>正则表通常被用来检索、替换那些符合某个模式（规则）的文本 <ul><li>验证表单</li><li>过滤敏感词（替换）</li></ul></li><li>特点： <ul><li>灵活性、逻辑性、功能性</li></ul></li></ul><h3 id="_02-使用" tabindex="-1">02. 使用 <a class="header-anchor" href="#_02-使用" aria-label="Permalink to &quot;02. 使用&quot;">​</a></h3><h4 id="_1-创建正则表达式" tabindex="-1">（1）创建正则表达式 <a class="header-anchor" href="#_1-创建正则表达式" aria-label="Permalink to &quot;（1）创建正则表达式&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用Regexp对象来创建</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">123</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 利用字面量创建</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">123</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_2-测试正则表达式-test" tabindex="-1">（2）测试正则表达式 test <a class="header-anchor" href="#_2-测试正则表达式-test" aria-label="Permalink to &quot;（2）测试正则表达式 test&quot;">​</a></h4><ul><li>检测<strong>目标</strong>是否符合正则表达式的规则</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regexObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true | false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_03-特殊字符" tabindex="-1">03. 特殊字符 <a class="header-anchor" href="#_03-特殊字符" aria-label="Permalink to &quot;03. 特殊字符&quot;">​</a></h3><ul><li>特殊字符：也称为元字符</li></ul><h4 id="_1-边界符-、" tabindex="-1">（1）边界符：<code>^</code>、 <code>$</code> <a class="header-anchor" href="#_1-边界符-、" aria-label="Permalink to &quot;（1）边界符：`^`、 `$`&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">abc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//正则表达式里面不需要加引号，不管是数字型还是字符串型</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>/^abc/</code>：表示匹配<strong>以 abc 开头</strong>的字符串</li><li><code>/abc$/</code>：表示匹配<strong>以 abc 结尾</strong>的字符串</li></ul><h4 id="_2-字符类-、-、" tabindex="-1">（2）字符类：<code>[]</code>、 <code>[-]</code>、 <code>[^]</code> <a class="header-anchor" href="#_2-字符类-、-、" aria-label="Permalink to &quot;（2）字符类：`[]`、 `[-]`、 `[^]`&quot;">​</a></h4><ul><li><code>/[abc]/</code>：表示匹配<strong>包含关系</strong>，只要<strong>包含</strong>了内部的某一个字符，返回为<code>true</code></li><li><code>/^[abc]$/</code>：表示匹配（<strong>多选一</strong>），只有是 a，或者 b，或者 c，才返<strong>回</strong><code>**true**</code></li><li><code>/^[a-z]$/</code>：表示匹配<strong>从 a 到 z</strong>的英文字母中<strong>任何一个字母</strong>，返<strong>回</strong><code>**true**</code></li><li><code>/^[a-zA-Z0-9_-]$/</code>：表示匹配从 a 到 z、从 A 到 Z、从 0 到 9、下划线、短横线</li><li><code>**/**[^a-z]/</code>：<code>[]</code>内部的<code>**^**</code>，表示**取反，**匹配非 a 到 z 的字符</li></ul><hr><h4 id="_3-量词符-、-、-、" tabindex="-1">（3）量词符：<code>*</code>、 <code>+</code>、<code>?</code>、 <code>{}</code> <a class="header-anchor" href="#_3-量词符-、-、-、" aria-label="Permalink to &quot;（3）量词符：`*`、 `+`、`?`、 `{}`&quot;">​</a></h4><ul><li><code>/^a*$/</code>：加上*，表示可以重复多次（&gt;=0）</li><li><code>/^a+$/</code>：加上+，表示重复一次以上（&gt;=1）</li><li><code>/^a?$/</code>：加上?，表示重复一次或者零次（1 | 0）</li><li><code>/^a{n}$/</code>：加上{n}，表示重复 n 次</li><li><code>/^a{n,}$/</code>：加上{n,}，表示重复 n 次以上（&gt;=n）</li><li><code>/^a{n,m}$/</code>：加上{n,m}，表示重复 n~m 次（&gt;=n，&lt;=m）</li><li><code>/^[a-zA-Z0-9_-]{6,16}$/</code>：表示要在 6-16 位的，字母、数字、下划线、短横线</li></ul><h4 id="_4-预定义类" tabindex="-1">（4）预定义类 <a class="header-anchor" href="#_4-预定义类" aria-label="Permalink to &quot;（4）预定义类&quot;">​</a></h4><ul><li><code>\\d</code>：匹配 0~9 之间任意数字，相当于<code>/[0-9]/</code></li><li><code>\\D</code>：匹配 0~9 之外的字符</li><li><code>\\w</code>：匹配任意字母、数字、下划线，相当于<code>/[a-zA-Z0-9_]/</code></li><li><code>\\W</code>：匹配除所有字母、数字、下划线以外的字符</li><li><code>\\s</code>：匹配空格（包括换行符、制表符、空格符），相当于<code>/[\\n\\t\\f\\r\\v]/</code></li><li><code>\\S</code>：匹配非空格字符</li><li><code>/\\d{3}-\\d{8}|\\d{4}-\\d{7}/</code>：表示【3 位-8 位】或者【4 位-7 位】010-12345678，0101-1234567</li><li>或符号 <strong>|</strong>，单竖线</li></ul><h3 id="_04-替换" tabindex="-1">04. 替换 <a class="header-anchor" href="#_04-替换" aria-label="Permalink to &quot;04. 替换&quot;">​</a></h3><ul><li><code>/表达式/[switch]</code>： <ul><li><code>switch</code>：修饰符，按照什么模式来匹配</li><li><code>g</code>：全局匹配；</li><li><code>i</code>：忽略大小写</li><li><code>gi</code>：全局匹配+忽略大小写</li></ul></li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">SB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">gi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将匹配到的 sb（不区分大小写） 全部替换为 ** ，但只能替换第一个</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',24),t=[n];function d(r,h,o,c,p,k){return a(),s("div",null,t)}const b=i(l,[["render",d]]);export{u as __pageData,b as default};
