import{_ as l,c as i,o as e,a1 as a}from"./chunks/framework.yskgK-vV.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Other/前端监控/01.前端埋点.md","filePath":"Other/前端监控/01.前端埋点.md"}'),t={name:"Other/前端监控/01.前端埋点.md"},_=a('<h3 id="_01-手动埋点" tabindex="-1">01. 手动埋点 <a class="header-anchor" href="#_01-手动埋点" aria-label="Permalink to &quot;01. 手动埋点&quot;">​</a></h3><ul><li><p>手动埋点，也称为代码埋点</p><ul><li>是通过手动在代码里面插入埋点代码的方式，来实现数据收集</li></ul></li><li><p>优点：</p><ul><li>灵活：开发人员可以根据需要自定义属性和事件，捕获用户行为和数据</li><li>精确：可以精确控制埋点为止，以确保收集到关键数据</li></ul></li><li><p>缺点：</p><ul><li>工作量大：需要在不同的地方插入不同的埋点代码</li><li>沟通量大：需要和产品、运营等多方面频繁沟通</li><li>迭代成本高：每次有埋点更新都需要重新修改代码</li></ul></li><li><p>例（以做过的项目为例）</p><ul><li>在每个点击事件，或者请求事件，的方法里</li><li>添加埋点代码，从而捕获到用户的行为和数据</li></ul></li></ul><h3 id="_02-无埋点" tabindex="-1">02. 无埋点 <a class="header-anchor" href="#_02-无埋点" aria-label="Permalink to &quot;02. 无埋点&quot;">​</a></h3><ul><li>一种自动收集所有用户行为和事件的方法 <ul><li>需要通过后端过滤和分析，以提取有用的数据</li></ul></li><li>优点： <ul><li>全自动：无需手动埋点，数据自动收集</li><li>全面：可以捕获所有用户行为</li></ul></li><li>缺点： <ul><li>数据量大：因为收集了所有数据，所以数据量庞大，需要后端过滤和处理，会增加服务器的性能压力</li><li>数据处理复杂：从大量数据中提取有用信息，需要复杂的算法和逻辑处理</li></ul></li></ul>',4),r=[_];function o(u,s,n,c,d,h){return e(),i("div",null,r)}const f=l(t,[["render",o]]);export{m as __pageData,f as default};
