import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.yskgK-vV.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Packages/Git/01.Git基础.md","filePath":"Packages/Git/01.Git基础.md"}'),l={name:"Packages/Git/01.Git基础.md"},e=n(`<h2 id="git-基础" tabindex="-1">Git 基础 <a class="header-anchor" href="#git-基础" aria-label="Permalink to &quot;Git 基础&quot;">​</a></h2><h3 id="_01-基本概念" tabindex="-1">01. 基本概念 <a class="header-anchor" href="#_01-基本概念" aria-label="Permalink to &quot;01. 基本概念&quot;">​</a></h3><h4 id="_1-版本管理" tabindex="-1">（1）版本管理 <a class="header-anchor" href="#_1-版本管理" aria-label="Permalink to &quot;（1）版本管理&quot;">​</a></h4><ul><li>版本管理是一种记录文件变化的方式，以便将来查阅特定版本的文件内容</li><li>问题： <ul><li>文档数量多且命名不清晰导致文档版本混乱。</li><li>每次编辑文档需要复制，不方便</li><li>多人同时编辑同一个文档，容易产生覆盖</li></ul></li></ul><h4 id="_2-git-是什么" tabindex="-1">（2）Git 是什么 <a class="header-anchor" href="#_2-git-是什么" aria-label="Permalink to &quot;（2）Git 是什么&quot;">​</a></h4><ul><li><code>Git</code> 是一个版本管理控制系统（缩写 <code>VCS</code>） <ul><li>它可以在任何时间点，将文档的状态作为更新记录保存起来</li><li>也可以在任何时间点，将更新记录恢复回来</li></ul></li></ul><h4 id="_3-下载" tabindex="-1">（3）下载 <a class="header-anchor" href="#_3-下载" aria-label="Permalink to &quot;（3）下载&quot;">​</a></h4><ul><li>下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a></li><li>国内：<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/git-for-windows/</a></li></ul><hr><h4 id="_4-基本工作流程" tabindex="-1">（4）基本工作流程 <a class="header-anchor" href="#_4-基本工作流程" aria-label="Permalink to &quot;（4）基本工作流程&quot;">​</a></h4><ul><li><p>开发者每次向 git 仓库提交项目状态</p><ul><li>首先，会将被修改过的文件从工作目录提交到暂存区</li><li>然后，再将暂存区的文件提交到 git 仓库</li></ul></li><li><p>分为三个区</p><ul><li><strong>⼯作区</strong><code>Working Directory</code>： 在 git 管理下的正常目录都算是工作区， 我们平时的编辑工作都是在工作区完成</li><li><strong>暂存区</strong><code>Stage</code>： 临时区域，里面存放将要提交文件的快照</li><li><strong>历史记录区</strong><code>History</code>： <code>git commit</code>后的记录区</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 整体流程： working directory =&gt; stage =&gt; history</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># working directory =&gt; stage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># stage =&gt; working directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># stage =&gt; history</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;commit message&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># history =&gt; stage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --files</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><hr><h3 id="_02-配置-git" tabindex="-1">02. 配置 Git <a class="header-anchor" href="#_02-配置-git" aria-label="Permalink to &quot;02. 配置 Git&quot;">​</a></h3><ul><li>在使用<code>Git</code>前，需要告诉<code>Git</code>你是谁，在向<code>Git</code>仓库中提交时需要用到</li><li>通常，我们需要配置 <ul><li><code>user.name</code>：<strong>用户名</strong></li><li><code>user.email</code>：<strong>邮箱</strong></li></ul></li></ul><h4 id="_1-windows-凭据" tabindex="-1">（1）windows 凭据： <a class="header-anchor" href="#_1-windows-凭据" aria-label="Permalink to &quot;（1）windows 凭据：&quot;">​</a></h4><ul><li>选择：控制面板------凭据管理器------windows 凭据 <ul><li>删除里面类似<code>git</code>相关的的用户信息</li><li>在<code>git push</code>就会弹出对话框让你重新输入用户名和密码</li></ul></li></ul><h4 id="_2-配置文件" tabindex="-1">（2）配置文件 <a class="header-anchor" href="#_2-配置文件" aria-label="Permalink to &quot;（2）配置文件&quot;">​</a></h4><ul><li>修改你本地<code>git</code>仓库里面的<code>config</code>文件 <ul><li>目录位于 <code>.git/config</code> 文件</li><li>在<code>url</code>前面手动输入用户名和密码</li><li>格式为 <code>https://username:userpassword@</code></li><li>具体的仓库地址(这里不要写协议名称，就是<code>http</code>，<code>htthps</code>).</li><li>示例<code> https://test:http://testpasswd@gitlab.test.com/test.git</code></li></ul></li></ul><h4 id="_3-通过命令行" tabindex="-1">（3）通过命令行 <a class="header-anchor" href="#_3-通过命令行" aria-label="Permalink to &quot;（3）通过命令行&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 全局配置，将作用于所有项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;userName&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;userEmail&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 局部配置，仅作用于当前目录（项目）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;userName&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lcoal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;userEmail&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看 Git 配置信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>如果配置错误，可重新使用以上步骤重新配置</li><li>也可以通过配置文件<code>.gitconfig</code>来进行配置</li></ul><h4 id="_4-ssh免登陆" tabindex="-1">（4）<code>ssh</code><strong>免登陆</strong> <a class="header-anchor" href="#_4-ssh免登陆" aria-label="Permalink to &quot;（4）\`ssh\`**免登陆**&quot;">​</a></h4><ul><li>生成密钥：<code>ssh-keygen</code></li><li>密钥存储目录 ：<code>C:\\Users\\用户\\.ssh</code></li><li>公钥名称：<code>id_rsa.pub</code></li><li>私钥名称：<code>id_rsa</code></li></ul><blockquote><p>需要将公钥添加到远程仓库中</p></blockquote><h4 id="_5-git忽略清单" tabindex="-1">（5）<code>Git</code><strong>忽略清单</strong> <a class="header-anchor" href="#_5-git忽略清单" aria-label="Permalink to &quot;（5）\`Git\`**忽略清单**&quot;">​</a></h4><ul><li>将不需要被 Git 管理的文件名字添加到：<code>.gitignore</code>此文件中 <ul><li>在执行 Git 命令的时候，Git 就会忽略这些文件。</li></ul></li><li>Git 忽略清单文件名称：<code>.git</code></li></ul><h4 id="_6-多账户配置" tabindex="-1">（6）多账户配置 <a class="header-anchor" href="#_6-多账户配置" aria-label="Permalink to &quot;（6）多账户配置&quot;">​</a></h4><ul><li>通过局部配置<code>config</code>实现</li></ul><hr><h3 id="_03-提交" tabindex="-1">03. 提交 <a class="header-anchor" href="#_03-提交" aria-label="Permalink to &quot;03. 提交&quot;">​</a></h3><h4 id="_1-初始化-git-仓库" tabindex="-1">（1）初始化 Git 仓库 <a class="header-anchor" href="#_1-初始化-git-仓库" aria-label="Permalink to &quot;（1）初始化 Git 仓库&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 初始化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-查看文件状态" tabindex="-1">（2）查看文件状态： <a class="header-anchor" href="#_2-查看文件状态" aria-label="Permalink to &quot;（2）查看文件状态：&quot;">​</a></h4><ul><li>提示开发者需要提交的文件</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-暂存文件" tabindex="-1">（3）暂存文件： <a class="header-anchor" href="#_3-暂存文件" aria-label="Permalink to &quot;（3）暂存文件：&quot;">​</a></h4><ul><li>将工作目录的文件添加到暂存区中</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 暂存单个文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 暂存所有文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_4-向仓库提交代码" tabindex="-1">（4）向仓库提交代码： <a class="header-anchor" href="#_4-向仓库提交代码" aria-label="Permalink to &quot;（4）向仓库提交代码：&quot;">​</a></h4><ul><li>将暂存区的文件提交到<code>Git</code>仓库</li><li>每次提交<strong>只包含一个功能</strong>，且不能有<code>Bug</code></li><li>每次提交都要写<strong>提交信息</strong></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 提交文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交信息是必需的&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_5-查看提交记录" tabindex="-1">（5）查看提交记录： <a class="header-anchor" href="#_5-查看提交记录" aria-label="Permalink to &quot;（5）查看提交记录：&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看提交记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_6-暂时保存更改stash" tabindex="-1">（6）<strong>暂时保存更改</strong><code>stash</code> <a class="header-anchor" href="#_6-暂时保存更改stash" aria-label="Permalink to &quot;（6）**暂时保存更改**\`stash\`&quot;">​</a></h4><ul><li>在<code>Git</code>中，可以暂时提取分支上所有的改动并存储，让开发人员得到一个干净的工作副本，临时转向其他工作</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 存储临时改动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 恢复改动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pop</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>git stash</code><ul><li><code>git stash</code><ul><li>用于保存和恢复工作进度，保存当前的工作进度</li><li>会分别对暂存区和工作区的状态进行保存</li></ul></li><li><code>git stash list</code><ul><li>显示进度列表，我们可以用<code>git stash</code>多次保存工作的进度</li></ul></li><li><code>git stash pop [--index] [&lt;stash&gt;]</code> ： <ul><li>如果不使用任何参数，会恢复最新保存的工作进度，并将恢复的工作进度从存储的工作进度列表中清除</li><li>如果提供参数（来自 git stash list 显示的列表），则从该中恢复。恢复完毕 也将从进度列表中删除 <ul><li>选项<code>-–index</code>除了恢复工作区的文件外，还尝试恢复暂存区</li></ul></li></ul></li><li><code>git stash drop [&lt;stash&gt;]</code><ul><li>删除一个存储的进度。默认删除最新的进度</li></ul></li><li><code>git stash clear</code><ul><li>删除所有存储的进度</li></ul></li><li><code>git stash branch &lt;branchname&gt; &lt;stash&gt;</code><ul><li>基于进度创建分支</li></ul></li></ul></li></ul><hr><h3 id="_04-推送" tabindex="-1">04. 推送 <a class="header-anchor" href="#_04-推送" aria-label="Permalink to &quot;04. 推送&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 推送到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名称</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库别名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名称</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址别名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名称</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 关联远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 别名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 克隆远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 仓库地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 拉取最新仓库代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名称</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><hr><h3 id="_05-回滚撤销" tabindex="-1">05. 回滚撤销 <a class="header-anchor" href="#_05-回滚撤销" aria-label="Permalink to &quot;05. 回滚撤销&quot;">​</a></h3><ul><li>用暂存区中的文件覆盖工作目录中的文件：<code>git checkout 文件名</code></li><li>将文件从暂存区中删除：<code>git rm --cached 文件名</code></li><li>将 Git 仓库中指定的更新记录恢复出来，并且覆盖暂存区和工作目录：<code>git rest --hard commitID</code></li></ul><h4 id="_1-未暂存" tabindex="-1">（1）未暂存 <a class="header-anchor" href="#_1-未暂存" aria-label="Permalink to &quot;（1）未暂存&quot;">​</a></h4><ul><li>即文件被修改，但未暂存，还在工作区中</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 撤销所有文件的修改操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 撤销指定文件的修改操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fileName</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_2-已暂存未提交" tabindex="-1">（2）已暂存未提交 <a class="header-anchor" href="#_2-已暂存未提交" aria-label="Permalink to &quot;（2）已暂存未提交&quot;">​</a></h4><ul><li>即从暂存区将文件取出来放到工作区</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 取出暂存区的所有文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 取出暂存区的指定文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fileName</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 覆盖上一次的 commit 信息，即本次提交会与上一次的提交合并，且提交信息为本次提交的信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --amend</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;new message&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_3-已提交未推送" tabindex="-1">（3）已提交未推送 <a class="header-anchor" href="#_3-已提交未推送" aria-label="Permalink to &quot;（3）已提交未推送&quot;">​</a></h4><ul><li><code>Head^</code>：表示上个版本 <ul><li>也可以写作<code>HEAD~1</code>，<code>1</code>表示撤回最近的一次提交<code>commit</code></li><li>如果想撤回两次最近的提交，可以使用<code>HEAD~2</code></li></ul></li><li><code>commitId</code>：表示指定的版本</li><li><code>--soft</code>：表示不删除工作空间的改动代码，只撤回<code>commit</code><ul><li><code>--hard</code>：表示会删除工作空间的改动代码，会同时撤回<code>commit</code>和<code>add</code></li></ul></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 先通过 git log 查看提交记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 回退到上一个版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --soft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD^</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 回退到指定版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitId</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_4-已提交已推送" tabindex="-1">（4）已提交已推送 <a class="header-anchor" href="#_4-已提交已推送" aria-label="Permalink to &quot;（4）已提交已推送&quot;">​</a></h4><ul><li><code>git revert</code>：用一次新的<code>commit</code>来回滚之前的<code>commit</code>，此次提交之前的<code>commit</code>都会被保留</li><li><code>git reset</code>：回到某次提交，提交及之前的<code>commit</code>都会被保留，但是此<code>commitId</code>之后的修改都会被删除</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 本地回滚到指定版本,且放弃指定版本之后的提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitId</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 本地会滚后，强制推送到远程，回滚远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 本地回滚到指定版本，且保留该版本之后的提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitId</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 推送到远程，需要先重新提交再推送</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;new message&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><hr><h3 id="_06-分支" tabindex="-1">06. 分支 <a class="header-anchor" href="#_06-分支" aria-label="Permalink to &quot;06. 分支&quot;">​</a></h3><blockquote><p>使用分支，可以让我们从开发主线上分离出来，以免影响开发主线</p><ul><li>可以认为分支就是当前工作目录中代码的一份副本</li></ul></blockquote><h4 id="_1-查看分支" tabindex="-1">（1）查看分支： <a class="header-anchor" href="#_1-查看分支" aria-label="Permalink to &quot;（1）查看分支：&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看本地分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看远程分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看所有分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看本地分支、远程分支对应关系</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_2-创建分支" tabindex="-1">（2）创建分支： <a class="header-anchor" href="#_2-创建分支" aria-label="Permalink to &quot;（2）创建分支：&quot;">​</a></h4><ul><li>在哪一个分支上，就是基于哪一个分支创建的</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 基于当前所在分支创建新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branchName</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-切换分支" tabindex="-1">（3）切换分支： <a class="header-anchor" href="#_3-切换分支" aria-label="Permalink to &quot;（3）切换分支：&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 切换到目标分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branchName</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_4-合并分支" tabindex="-1">（4）合并分支： <a class="header-anchor" href="#_4-合并分支" aria-label="Permalink to &quot;（4）合并分支：&quot;">​</a></h4><ul><li>要在上一级的分支上进行，合并次一级的分支</li><li><code>marge</code>特点： <ul><li>自动创建一个新的<code>commit</code>如果合并的时候遇到冲突，仅需要修改后重新<code>commit</code></li><li>可以记录真实的<code>commit</code>情况，包括每个分支的详情</li><li>但每次<code>merge</code>会自动产生一个<code>merge commit</code>， 所以看到分支会很杂乱</li></ul></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 合并目标分支到当前分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branchName</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_5-变基分支" tabindex="-1">（5）变基分支： <a class="header-anchor" href="#_5-变基分支" aria-label="Permalink to &quot;（5）变基分支：&quot;">​</a></h4><ul><li><code>rebase</code>特点： <ul><li>会合并之前的<code>commit</code>历史</li><li>得到更简洁的项目历史，去掉了<code>merge commit</code></li><li>但如果合并出现代码问题不容易定位， 因为<code>re-write</code> 了<code>history</code></li></ul></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 变基目标分支到当前分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branchName</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_6-删除分支" tabindex="-1">（6）删除分支： <a class="header-anchor" href="#_6-删除分支" aria-label="Permalink to &quot;（6）删除分支：&quot;">​</a></h4><ul><li>分支被合并后才能被删除</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 删除本地分支 -- 检查状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 删除本地分支 -- 直接删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 删除远程分支 -- 直接删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 删除远程分支 -- 推送空分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :branch_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 在本地删除远程不存在的分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prune</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_7-取消合并" tabindex="-1">（7）取消合并 <a class="header-anchor" href="#_7-取消合并" aria-label="Permalink to &quot;（7）取消合并&quot;">​</a></h4><ul><li><p>当<code>git merge xxx</code> 合并分支时遇到错误或者冲突，想取消这次合并，可以使用<code>abort</code></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 取消当前合并</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --abort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><hr><h3 id="_07-关联远程仓库" tabindex="-1">07. 关联远程仓库 <a class="header-anchor" href="#_07-关联远程仓库" aria-label="Permalink to &quot;07. 关联远程仓库&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 移除当前关联的远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 重新添加新的远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newRepository</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,89),p=[e];function t(h,r,d,k,c,o){return a(),i("div",null,p)}const b=s(l,[["render",t]]);export{u as __pageData,b as default};
